version: '3.3'

services:
    proxy:
        build: ./nginx
        image: 526932095279.dkr.ecr.us-east-1.amazonaws.com/manager:${TAG_NGINX}
        entrypoint: dockerize -template /app/nginx/default.temp.conf:/etc/nginx/conf.d/default.conf -wait tcp://app:8000 nginx
        environment:
            - APP_NAME=app
            - APP_PORT=8000
        networks:
            - traefik-public
            - app-network
        volumes:
            - static_django:/app/static/
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.manager-http.rule=Host(`hub.smarthis.com.br`) || Host(`www.hub.smarthis.com.br`)
                - traefik.http.routers.manager-https.middlewares=test-redirectregex
                - traefik.http.middlewares.test-redirectregex.redirectregex.regex=^https://www.hub.smarthis.com.br/(.*)
                - traefik.http.middlewares.test-redirectregex.redirectregex.replacement=https://hub.smarthis.com.br/$${1}
                - traefik.http.middlewares.test-redirectregex.redirectregex.permanent=true
                - traefik.http.routers.manager-http.entrypoints=http
                - traefik.http.routers.manager-http.middlewares=https-redirect
                - traefik.http.routers.manager-https.rule=Host(`hub.smarthis.com.br`) || Host(`www.hub.smarthis.com.br`)
                - traefik.http.routers.manager-https.entrypoints=https
                - traefik.http.routers.manager-https.tls=true
                - traefik.http.routers.manager-https.tls.certresolver=le
                - traefik.http.services.manager.loadbalancer.server.port=80


    app:
        build: .
        image: 526932095279.dkr.ecr.us-east-1.amazonaws.com/manager:${TAG_HUB}
        #entrypoint: ./migrate.sh
        env_file: /home/ubuntu/secrets/portal/.env
        networks:
            - app-network
        volumes:
            - static_django:/app/static/
            - worker-volume:/app/encryption/

    worker:
        build: .
        image: 526932095279.dkr.ecr.us-east-1.amazonaws.com/manager:${TAG_HUB}
        entrypoint: celery -A portal worker -B -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
        env_file: /home/ubuntu/secrets/portal/.env
        networks:
            - broker-network
            # - bot-cpom-sp_bot-network
        volumes:
            - worker-volume:/app/encryption/

networks:
    traefik-public:
        external: true
    app-network:
        attachable: true
        external: false
    broker-network:
        external: false
        attachable: true

volumes:
    static_django:
    worker-volume:
